{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  methods: {\n    async $get(url, param) {\n      return (await axios.get(url, {\n        params: param\n      }).catch(e => {\n        console.log(e);\n      })).data;\n    },\n\n    async $post(url, data) {\n      return (await axios({\n        method: 'post',\n        url,\n        data\n      }).catch(e => {\n        console.error(e);\n      })).data;\n    },\n\n    async $delete(url, param) {\n      return (await axios.delete(url, {\n        params: param\n      }).catch(e => {\n        console.log(e);\n      })).data;\n    },\n\n    $base64(file) {\n      return new Promise(resolve => {\n        const fr = new FileReader();\n\n        fr.onload = e => {\n          //로딩이 끝나면 e 실행\n          resolve(e.target.result); //파일 로드의 결과값\n        };\n\n        fr.readAsDataURL(file); //imageInsert의 101line image에 값이 들어간다.\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["axios","methods","$get","url","param","get","params","catch","e","console","log","data","$post","method","error","$delete","delete","$base64","file","Promise","resolve","fr","FileReader","onload","target","result","readAsDataURL"],"sources":["C:/Apache24/LibraryManagementProgram/Front_End/book-project/src/mixin.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    methods: {\r\n        async $get(url, param) {\r\n            return (await axios.get(url, {\r\n                params : param\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n            ).data;\r\n        },\r\n        \r\n        async $post(url, data) {\r\n            return (await axios({\r\n                method: 'post',\r\n                url,\r\n                data\r\n            }).catch(e => {\r\n                console.error(e);\r\n            })).data;\r\n        },\r\n\r\n        async $delete(url, param) {\r\n            return (await axios.delete(url, {\r\n                params : param\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })).data;\r\n        },\r\n\r\n\r\n        $base64(file) {\r\n            return new Promise(resolve => {\r\n                const fr = new FileReader();\r\n                fr.onload = e => {             //로딩이 끝나면 e 실행\r\n                    resolve(e.target.result);  //파일 로드의 결과값\r\n                }\r\n                fr.readAsDataURL(file);        //imageInsert의 101line image에 값이 들어간다.\r\n            });\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACXC,OAAO,EAAE;IACL,MAAMC,IAAN,CAAWC,GAAX,EAAgBC,KAAhB,EAAuB;MACnB,OAAO,CAAC,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,EAAe;QACzBG,MAAM,EAAGF;MADgB,CAAf,EAEXG,KAFW,CAELC,CAAC,IAAI;QACVC,OAAO,CAACC,GAAR,CAAYF,CAAZ;MACH,CAJa,CAAP,EAKLG,IALF;IAMH,CARI;;IAUL,MAAMC,KAAN,CAAYT,GAAZ,EAAiBQ,IAAjB,EAAuB;MACnB,OAAO,CAAC,MAAMX,KAAK,CAAC;QAChBa,MAAM,EAAE,MADQ;QAEhBV,GAFgB;QAGhBQ;MAHgB,CAAD,CAAL,CAIXJ,KAJW,CAILC,CAAC,IAAI;QACVC,OAAO,CAACK,KAAR,CAAcN,CAAd;MACH,CANa,CAAP,EAMHG,IANJ;IAOH,CAlBI;;IAoBL,MAAMI,OAAN,CAAcZ,GAAd,EAAmBC,KAAnB,EAA0B;MACtB,OAAO,CAAC,MAAMJ,KAAK,CAACgB,MAAN,CAAab,GAAb,EAAkB;QAC5BG,MAAM,EAAGF;MADmB,CAAlB,EAEXG,KAFW,CAELC,CAAC,IAAI;QACVC,OAAO,CAACC,GAAR,CAAYF,CAAZ;MACH,CAJa,CAAP,EAIHG,IAJJ;IAKH,CA1BI;;IA6BLM,OAAO,CAACC,IAAD,EAAO;MACV,OAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;QAC1B,MAAMC,EAAE,GAAG,IAAIC,UAAJ,EAAX;;QACAD,EAAE,CAACE,MAAH,GAAYf,CAAC,IAAI;UAAc;UAC3BY,OAAO,CAACZ,CAAC,CAACgB,MAAF,CAASC,MAAV,CAAP,CADa,CACc;QAC9B,CAFD;;QAGAJ,EAAE,CAACK,aAAH,CAAiBR,IAAjB,EAL0B,CAKK;MAClC,CANM,CAAP;IAOH;;EArCI;AADE,CAAf"},"metadata":{},"sourceType":"module"}